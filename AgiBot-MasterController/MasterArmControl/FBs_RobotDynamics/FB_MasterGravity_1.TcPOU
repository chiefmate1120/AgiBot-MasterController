<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_MasterGravity_1" Id="{c6a3f904-4b07-4cab-8f16-1ae9e868528a}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_MasterGravity_1
VAR_INPUT
END_VAR
VAR_OUTPUT
	o_leftGravity:ARRAY[1..7] OF LREAL;
	o_rightGravity:ARRAY[1..7] OF LREAL;
END_VAR
VAR
	// position of all the active joint
	m_leftJntPos:ARRAY[1..7] OF LREAL;
	m_rightJntPos:ARRAY[1..7] OF LREAL;
	
	// gravity regression matrix
	m_leftRegMat:ARRAY[1..5,1..16] OF LREAL;
	m_rightRegMat:ARRAY[1..5,1..16] OF LREAL;
	
	(*graParam=[ 2.7244*m3 + 2.7244*m4 + 2.7244*m5 + 2.7244*m6 + 9.8*mx2 + 9.8*mx9,
            	9.8*my2 + 9.8*my9,
			 	3.577*m4 + 3.577*m5 + 3.577*m6 + 0.49*m9 + 9.8*mx3 + 9.8*mx8
           		1.5827*m4 + 1.5827*m5 + 1.5827*m6 + 9.8*my3 + 9.8*my8 + 9.8*mz4
            	mz5-my4,	my5+mz6,  	mx4,   	mx5, 	mx6,   	my6
            	preF2,   k2,   preF3,    k3,    preF5   k5]*)
	m_leftGravityParam :ARRAY[1..16] OF REAL := 
	[ 	4.22377, -0.000238508, 3.4348, 0.523733, -0.0377839, 0.0220708, 0.0000375, 0.0000351, 0.00001, -0.0147457, 
		12.4552, 2044.8, 12.4552, 2044.8, 2.13504, 403.2];
	m_rightGravityParam :ARRAY[1..16] OF REAL := 
	[ 	3.95717, -0.000238508, 3.22352, 0.823427, -0.0371339, 0.0238336, 0.0000375, 0.0000117, -0.00001, -0.0145314, 
		13.7318, 1841.41, 12.4552, 2044.8, 2.13504, 403.2];
		
	i,j:INT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
FOR i:=1 TO 7 DO 
	m_leftJntPos[i]:=Robot_Status.robot_current_joint_position_v2[1,i];
	m_rightJntPos[i]:=Robot_Status.robot_current_joint_position_v2[2,i];
	o_leftGravity[i]:=0;
	o_rightGravity[i]:=0;
END_FOR

// convert joint position to active joint
m_leftJntPos[3]:=m_leftJntPos[3]+m_leftJntPos[2];
m_rightJntPos[3]:=m_rightJntPos[3]+m_rightJntPos[2];

// transform joint4 position from DH joint to motor joint
// q4Jnt= q4motor+q8-q2-90;
m_leftJntPos[4]:=m_leftJntPos[4]-m_leftJntPos[3]+m_leftJntPos[2]+deg2rad(90);
m_rightJntPos[4]:=m_rightJntPos[4]-m_rightJntPos[3]+m_rightJntPos[2]+deg2rad(90);

getRegMat(m_leftJntPos,0,o_regMat=>m_leftRegMat);
getRegMat(m_rightJntPos,1,o_regMat=>m_rightRegMat);

FOR i:=2 TO 6 DO
	FOR j:=1 TO 16 DO
		o_leftGravity[i]:=o_leftGravity[i]+m_leftRegMat[i-1,j]*m_leftGravityParam[j];
		o_rightGravity[i]:=o_rightGravity[i]+m_rightRegMat[i-1,j]*m_rightGravityParam[j];
	END_FOR
END_FOR]]></ST>
    </Implementation>
    <Method Name="getRegMat" Id="{95a2d4ed-7d08-45e8-b355-6b79e517bfd6}">
      <Declaration><![CDATA[METHOD getRegMat : BOOL
VAR_INPUT
	// position of all the active joint
	i_jointPos:ARRAY[1..7] OF LREAL;
	
	// 0 for left, 1 for right
	i_armIdx:INT;
END_VAR

VAR
	q2,q8,q4,q5,q6:LREAL;
	i,j :INT;
END_VAR

VAR_OUTPUT
	o_regMat:ARRAY[1..5,1..16] OF LREAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[q2:=i_jointPos[2];
q8:=i_jointPos[3];
q4:=i_jointPos[4];
q5:=i_jointPos[5];
q6:=i_jointPos[6];

FOR i:=1 TO 5 DO
	FOR j:=1 TO 16 DO
		o_regMat[i,j]:=0;
	END_FOR
END_FOR

// active joint 2
o_regMat[1,1]:=COS(q2);
o_regMat[1,2]:=-SIN(q2); 
o_regMat[1,3] := 0;
o_regMat[1,4] :=   0;
o_regMat[1,5] := - 4.9*(COS(q2 - q4) - COS(q4 - q2 + 2.0*q8));
o_regMat[1,6] :=  9.8*COS(q4 - q2 + q8)*SIN(q5)*SIN(q8);
o_regMat[1,7] :=   - 4.9*(SIN(q2 - q4) + SIN(q4 - q2 + 2.0*q8));
o_regMat[1,8] :=   - 9.8*COS(q4 - q2 + q8)*COS(q5)*SIN(q8);
o_regMat[1,9] :=  9.8*SIN(q8)*(SIN(q4 - q2 + q8)*SIN(q6) - COS(q4 - q2 + q8)*COS(q5)*COS(q6));
o_regMat[1,10] :=9.8*SIN(q8)*(SIN(q4 - q2 + q8)*COS(q6) + COS(q4 - q2 + q8)*COS(q5)*SIN(q6));
spring2RegMat(q2, o_preF=>o_regMat[1,11], o_stiff=>o_regMat[1,12]);
o_regMat[1,11]:=-o_regMat[1,11];         
o_regMat[1,12]:=-o_regMat[1,12];

// active joint3
o_regMat[2,3]:= COS(q8);
o_regMat[2,4]:= - SIN(q8);
o_regMat[2,5]:= -9.8*(COS(2.0*q8)*COS(q2)*COS(q4) + COS(2.0*q8)*SIN(q2)*SIN(q4) - SIN(2.0*q8)*COS(q2)*SIN(q4) + SIN(2.0*q8)*COS(q4)*SIN(q2));
o_regMat[2,6]:= -9.8*(COS(q5)*SIN(q8) + COS(2.0*q8)*COS(q2)*SIN(q4)*SIN(q5) - COS(2.0*q8)*COS(q4)*SIN(q2)*SIN(q5) + SIN(2.0*q8)*COS(q2)*COS(q4)*SIN(q5) + SIN(2.0*q8)*SIN(q2)*SIN(q4)*SIN(q5));
o_regMat[2,7]:= 9.8*(COS(2.0*q8)*COS(q2)*SIN(q4) - COS(2.0*q8)*COS(q4)*SIN(q2) + SIN(2.0*q8)*COS(q2)*COS(q4) + SIN(2.0*q8)*SIN(q2)*SIN(q4));
o_regMat[2,8]:= 9.8*(COS(2.0*q8)*COS(q2)*COS(q5)*SIN(q4) - SIN(q5)*SIN(q8) - COS(2.0*q8)*COS(q4)*COS(q5)*SIN(q2) + SIN(2.0*q8)*COS(q2)*COS(q4)*COS(q5) + SIN(2.0*q8)*COS(q5)*SIN(q2)*SIN(q4));
o_regMat[2,9]:= 9.8*(COS(2.0*q8)*COS(q2)*COS(q4)*SIN(q6) - COS(q6)*SIN(q5)*SIN(q8) + COS(2.0*q8)*SIN(q2)*SIN(q4)*SIN(q6) - SIN(2.0*q8)*COS(q2)*SIN(q4)*SIN(q6) + SIN(2.0*q8)*COS(q4)*SIN(q2)*SIN(q6) + COS(2.0*q8)*COS(q2)*COS(q5)*COS(q6)*SIN(q4) - COS(2.0*q8)*COS(q4)*COS(q5)*COS(q6)*SIN(q2) + SIN(2.0*q8)*COS(q2)*COS(q4)*COS(q5)*COS(q6) + SIN(2.0*q8)*COS(q5)*COS(q6)*SIN(q2)*SIN(q4)); 
o_regMat[2,10]:= 9.8*(SIN(q5)*SIN(q6)*SIN(q8) + COS(2.0*q8)*COS(q2)*COS(q4)*COS(q6) + COS(2.0*q8)*COS(q6)*SIN(q2)*SIN(q4) - SIN(2.0*q8)*COS(q2)*COS(q6)*SIN(q4) + SIN(2.0*q8)*COS(q4)*COS(q6)*SIN(q2) - COS(2.0*q8)*COS(q2)*COS(q5)*SIN(q4)*SIN(q6) + COS(2.0*q8)*COS(q4)*COS(q5)*SIN(q2)*SIN(q6) - SIN(2.0*q8)*COS(q2)*COS(q4)*COS(q5)*SIN(q6) - SIN(2.0*q8)*COS(q5)*SIN(q2)*SIN(q4)*SIN(q6));
spring3RegMat(q8, o_preF=>o_regMat[2,13], o_stiff=>o_regMat[2,14]);
o_regMat[2,13]:=-o_regMat[2,13];
o_regMat[2,14]:=-o_regMat[2,14];

// active joint4
o_regMat[3,5]:= 9.8*SIN(q4 - q2 + q8)*SIN(q8);
o_regMat[3,6]:= - 9.8*COS(q4 - q2 + q8)*SIN(q5)*SIN(q8);
o_regMat[3,7]:= 9.8*COS(q4 - q2 + q8)*SIN(q8);
o_regMat[3,8]:= 9.8*COS(q4 - q2 + q8)*COS(q5)*SIN(q8);
o_regMat[3,9]:= - 9.8 *SIN(q8)*(SIN(q4 - q2 + q8)*SIN(q6) - COS(q4 - q2 + q8)*COS(q5)*COS(q6));
o_regMat[3,10]:= - 9.8*SIN(q8)*(SIN(q4 - q2 + q8)*COS(q6) + COS(q4 - q2 + q8)*COS(q5)*SIN(q6));
              
// active joint5
o_regMat[4,6]:= -9.8* (COS(q8)*SIN(q5) + SIN(q4 - q2 + q8)*COS(q5)*SIN(q8));
o_regMat[4,7]:= 0;
o_regMat[4,8]:= 9.8* (COS(q5)*COS(q8) - SIN(q4 - q2 + q8)*SIN(q5)*SIN(q8));
o_regMat[4,9]:= 9.8*COS(q6)*(COS(q5)*COS(q8) - SIN(q4 - q2 + q8)*SIN(q5)*SIN(q8));
o_regMat[4,10]:= -9.8*SIN(q6)*(COS(q5)*COS(q8) - SIN(q4 - q2 + q8)*SIN(q5)*SIN(q8));
spring5RegMat(q5,i_armIdx, o_preF=>o_regMat[4,15], o_stiff=>o_regMat[4,16]);
o_regMat[4,15]:=-o_regMat[4,15];
o_regMat[4,16]:=-o_regMat[4,16];

// active joint5
o_regMat[5,9]:= -9.8*(COS(q8)*SIN(q5)*SIN(q6) - COS(q4 - q2 + q8)*COS(q6)*SIN(q8) + SIN(q4 - q2 + q8)*COS(q5)*SIN(q6)*SIN(q8));
o_regMat[5,10]:= -9.8*(COS(q4 - q2 + q8)*SIN(q6)*SIN(q8) + COS(q6)*COS(q8)*SIN(q5) + SIN(q4 - q2 + q8)*COS(q5)*COS(q6)*SIN(q8)); ]]></ST>
      </Implementation>
    </Method>
    <Method Name="spring2RegMat" Id="{abebb1ea-b906-4e6f-b5eb-ae4d7c412b9d}">
      <Declaration><![CDATA[(*spring force F = preF+k(L-L0)
% torque trq=F*t=preF*t+k*t*(L-L0)=[t, t*(L-L0)]*[preF,k]'
% this function return [t, t(L-L0)]*)
METHOD spring2RegMat : BOOL
VAR_INPUT
	i_q2:LREAL;
END_VAR

VAR
	// spring paramters
	L0 :LREAL :=101.6E-3;
    b1:LREAL :=14.5E-3;
    b2:LREAL :=15E-3;
    l1:LREAL :=172E-3;
    r0:LREAL :=31E-3;

	theta,length,t:LREAL;  
	
END_VAR

VAR_OUTPUT
	o_preF:LREAL;
	o_stiff:LREAL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[ L0:=L0+b1+b2;
 
	//spring length
    theta:=i_q2+deg2rad(90);
    length:=SQRT(l1*l1+r0*r0+2*l1*r0*COS(theta));
    
	//force arm
    t:=r0*l1*SIN(theta)/Length;
    
	//torque direction is determined by theta(or t)
    o_preF:=t;
    o_stiff:=t*(length-L0);]]></ST>
      </Implementation>
    </Method>
    <Method Name="spring3RegMat" Id="{076947b8-6819-4ff8-9b41-31781347ac51}">
      <Declaration><![CDATA[(*spring force F = preF+k(L-L0)
% torque trq=F*t=preF*t+k*t*(L-L0)=[t, t*(L-L0)]*[preF,k]'
% this function return [t, t(L-L0)]*)
METHOD spring3RegMat : BOOL
VAR_INPUT
	i_q3:LREAL;
END_VAR

VAR
	// spring paramters
  	L0:LREAL:=101.6E-3;
    b1:LREAL:=14E-3;
    b2:LREAL:=15E-3;
    l1:LREAL:=172E-3;
    r0:LREAL:=30E-3;
    d:LREAL:=10E-3;

	alpha, beta,tanBeta, length,t:LREAL;  
	
	spring: INT;
END_VAR

VAR_OUTPUT
	o_preF:LREAL;
	o_stiff:LREAL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[ L0:=L0+b1+b2;
 
// spring length
    alpha:=i_q3+deg2rad(90);
    tanBeta:=(r0*SIN(alpha)+d)/(l1+r0*COS(alpha));
    beta:=ATAN(tanBeta);
    length:=d/SIN(beta)+r0*SIN(alpha)/SIN(beta);
    
// force arm
    t:=(l1-d*cot(beta))*SIN(beta);
    
// torque direction is determined by theta(or t)
    o_preF:=t;
    o_stiff:=t*(length-L0);
	
]]></ST>
      </Implementation>
    </Method>
    <Method Name="spring5RegMat" Id="{ba5d7c06-0f32-4f2e-b227-8db2893bff27}">
      <Declaration><![CDATA[(*spring force F = preF+k(L-L0)
 torque trq=F*t=preF*t+k*t*(L-L0)=[t, t*(L-L0)]*[preF,k]'
 this function return [t, t(L-L0)]
 armIdx, 0 for left arm , 1 for right arm]*)
METHOD spring5RegMat : BOOL
VAR_INPUT
	i_q5:LREAL;
	i_armIdx:INT;
END_VAR

VAR
	// spring paramters
  	L0:LREAL:=34.93E-3;
    s1:LREAL:=34.3E-3;
    L1:LREAL:=100E-3;
    r0:LREAL:=12.5E-3;
    beta:LREAL:=deg2rad(32.02);

	theta, length,t:LREAL;  
	
	spring: INT;
	joint: INT;
	armIdx: INT;
END_VAR

VAR_OUTPUT
	o_preF:LREAL;
	o_stiff:LREAL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[ L0:=L0+s1;
 
// joint 5 motion angle
    IF i_armIdx=0 THEN 
        theta:=i_q5-pi;// left arm
    ELSIF i_armIdx=1 THEN 
        theta:=pi-i_q5; // right arm
    END_IF

    // spring length and force arm
    length:=SQRT(L1*L1+r0*r0+2*L1*r0*COS(theta+beta));
    t:=L1*r0*SIN(theta+beta)/length;
    
    // torque direction is determined by t
    IF i_armIdx = 0 THEN 
        o_preF:=t;
        o_stiff:=t*(length-L0);
    else
        o_preF:=-t;
        o_stiff:=-t*(length-L0);
    END_IF
	
	
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_MasterGravity_1">
      <LineId Id="9" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="53" Count="0" />
      <LineId Id="78" Count="1" />
      <LineId Id="51" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="55" Count="6" />
      <LineId Id="54" Count="0" />
      <LineId Id="64" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="71" Count="0" />
      <LineId Id="73" Count="1" />
      <LineId Id="76" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="77" Count="0" />
      <LineId Id="75" Count="0" />
    </LineIds>
    <LineIds Name="FB_MasterGravity_1.getRegMat">
      <LineId Id="5" Count="0" />
      <LineId Id="15" Count="3" />
      <LineId Id="81" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="84" Count="1" />
      <LineId Id="83" Count="0" />
      <LineId Id="125" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="27" Count="7" />
      <LineId Id="86" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="126" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="38" Count="8" />
      <LineId Id="49" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="127" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="50" Count="6" />
      <LineId Id="61" Count="5" />
      <LineId Id="87" Count="0" />
      <LineId Id="67" Count="1" />
      <LineId Id="128" Count="0" />
      <LineId Id="74" Count="1" />
      <LineId Id="21" Count="0" />
    </LineIds>
    <LineIds Name="FB_MasterGravity_1.spring2RegMat">
      <LineId Id="5" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="23" Count="8" />
      <LineId Id="22" Count="0" />
    </LineIds>
    <LineIds Name="FB_MasterGravity_1.spring3RegMat">
      <LineId Id="5" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="75" Count="0" />
      <LineId Id="64" Count="8" />
      <LineId Id="77" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="22" Count="0" />
    </LineIds>
    <LineIds Name="FB_MasterGravity_1.spring5RegMat">
      <LineId Id="5" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="112" Count="17" />
      <LineId Id="111" Count="0" />
      <LineId Id="132" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="22" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>