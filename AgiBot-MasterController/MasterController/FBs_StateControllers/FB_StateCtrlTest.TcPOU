<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_StateCtrlTest" Id="{0c47bb14-eaef-4d00-89db-6153e5307754}" SpecialFunc="None">
    <Declaration><![CDATA[// Brief: Master Arm Test
FUNCTION_BLOCK PUBLIC FB_StateCtrlTest EXTENDS FB_MasterArmCtrlBase
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	// ################ variables for single DH  joint test ##################
	m_freqTestFlag :BOOL:=FALSE;
	m_initJntPos :Vec7d;
	m_jntMotionFreq :Vec7d :=[0.2, 0.2, 0.1, 4(0.1)];
	m_jntMotionRange :Vec7d :=[pi/6, pi/6, 0.1, 4(pi/6)];
	m_testJntIdx :INT :=1;
	
	m_stepTestFlag :BOOL :=FALSE;
	m_jntStep : LREAL := 5*g_deg2Rad;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="calcCmdJntPos" Id="{010d1f8e-611a-45d6-a3e6-a98e946007a3}">
      <Declaration><![CDATA[METHOD PROTECTED calcCmdJntPos : BOOL
VAR_IN_OUT CONSTANT
	i_slaveIdx :INT;
	i_shoulderPose :ST_Frame;
	i_masterArm :FB_MasterArm;
	i_slaveStatus :ST_SlaveStatus;
END_VAR

VAR 
	i:INT :=0;
	errThres :LREAL;
	m_masterGripAngle: INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Just for joint controller test
IF m_testJntIdx >=1 AND m_testJntIdx <=7 THEN
	IF m_freqTestFlag THEN 
		m_cmdJntPos[m_testJntIdx]:=m_initJntPos[m_testJntIdx]+m_jntMotionRange[m_testJntIdx]/2
										+0.5*m_jntMotionRange[m_testJntIdx]*SIN(2*pi*m_jntMotionFreq[m_testJntIdx]*m_timePeriod-pi/2);
		m_cmdJntVel[m_testJntIdx]:=0.5*m_jntMotionRange[m_testJntIdx]*2*pi*m_jntMotionFreq[m_testJntIdx]*COS(2*pi*m_jntMotionFreq[m_testJntIdx]*m_timePeriod-pi/2);
	ELSIF m_stepTestFlag THEN
		m_cmdJntPos[m_testJntIdx]:=m_initJntPos[m_testJntIdx]+m_jntStep;
		m_cmdJntVel[m_testJntIdx]:=0;
	ELSE
		m_timePeriod:=0;
	END_IF
	
END_IF


FOR i:=1 TO 3 DO 
		errThres :=5*g_deg2rad;
	IF ABS(m_cmdJntPos[i]-i_masterArm.curJntPos[i])>errThres THEN
		m_isFinished:=TRUE;
	END_IF
	
END_FOR
]]></ST>
      </Implementation>
    </Method>
    <Method Name="init" Id="{577e5bac-bcb1-4cc3-b600-c297bc6f4cb5}">
      <Declaration><![CDATA[METHOD PUBLIC init : BOOL
VAR_IN_OUT CONSTANT
	i_masterArm	:FB_MasterArm;
END_VAR
VAR_IN_OUT 
	r_masterArmCtrlCmd :ST_ArmCtrlCmds;
END_VAR

]]></Declaration>
      <Implementation>
        <ST><![CDATA[// check if to hold the command joint position unchanged
m_holdLastCmds := checkToHoldLastCmds(i_masterArm);

// init
SUPER^.Init(i_masterArm,r_masterArmCtrlCmd);

m_initJntPos := i_masterArm.curJntPos;

// update commands to arm
copyCmds(r_masterArmCtrlCmd);]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_StateCtrlTest">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_StateCtrlTest.calcCmdJntPos">
      <LineId Id="114" Count="0" />
      <LineId Id="132" Count="0" />
      <LineId Id="202" Count="0" />
      <LineId Id="205" Count="1" />
      <LineId Id="203" Count="1" />
      <LineId Id="208" Count="0" />
      <LineId Id="231" Count="0" />
      <LineId Id="209" Count="1" />
      <LineId Id="207" Count="0" />
      <LineId Id="139" Count="0" />
      <LineId Id="134" Count="0" />
      <LineId Id="161" Count="0" />
      <LineId Id="117" Count="0" />
      <LineId Id="111" Count="0" />
      <LineId Id="125" Count="0" />
      <LineId Id="127" Count="1" />
      <LineId Id="126" Count="0" />
      <LineId Id="118" Count="1" />
      <LineId Id="113" Count="0" />
    </LineIds>
    <LineIds Name="FB_StateCtrlTest.init">
      <LineId Id="67" Count="4" />
      <LineId Id="81" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="91" Count="1" />
      <LineId Id="90" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>