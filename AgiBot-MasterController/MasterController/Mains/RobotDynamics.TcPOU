<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="RobotDynamics" Id="{798b314f-0a53-4e08-997d-5fefed426c86}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM RobotDynamics

VAR
	// master robot arms joint data
	m_masterJointsData AT %I* :ST_MasterJointData;
	
	// dynamic output
	m_masterDynaData AT %Q* : ST_MasterDynaData;
	
	// flag to init robot dynamic model
	m_robotDynaInit :BOOL :=FALSE;
	
	// master grivity model 
	m_gravityModel :ARRAY[1..g_mArmNum] OF FB_MasterGravity;
	
	// master arm dynamic model
	m_armDynamic :ARRAY[1..g_mArmNum] OF FB_MasterDynamic;
	
	// master friction model
	m_frictionModel : ARRAY[1..g_mArmNum] OF FB_MasterFriciton;
	
	// master external torque observer
	m_jntDOB : ARRAY[1..g_mArmNum] OF FB_JntObserver;
	
	// code execute time measure
	m_codeTime : Profiler;
	
	i: INT;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[m_codeTime(START:=TRUE, RESET:=TRUE);

// robot dynamic model init
IF m_robotDynaInit =FALSE THEN
	FOR i:=1 TO g_mArmNum DO
		m_gravityModel[i].Init(i);
		m_armDynamic[i].init(i);
		m_frictionModel[i].init(i);
		// NOTE: curJntPos is usually zero when init, so observer need some time to stable after code run
		m_jntDOB[i].init(i, m_masterJointsData.m_curJntPos[i]); 
	END_FOR

	m_robotDynaInit:=TRUE;
END_IF

FOR i:=1 TO g_mArmNum DO
	// run gravity model
	m_gravityModel[i].run(m_masterJointsData.m_curJntPos[i], m_masterDynaData.m_gravity[i]);
	
	// run dynamic model
	m_armDynamic[i].updateDynamic(m_masterJointsData.m_curJntPos[i]);
	m_masterDynaData.m_massMat[i]:=m_armDynamic[i].jntMassMat;
	m_masterDynaData.m_lambda[i]:=m_armDynamic[i].cartMassMat;
	m_masterDynaData.m_dynaNullspace[i]:=m_armDynamic[i].dynaNullspace;
	
	// run friction model
	m_masterDynaData.m_friction[i] := m_frictionModel[i].run(m_masterDynaData.m_gravity[i],m_masterJointsData.m_curJntVel[i]);
	
(*	// run DOB
	 m_masterDynaData.m_jntExtTrq[i] := m_jntDOB[i].run(m_masterJointsData.m_curJntTrq[i], m_masterJointsData.m_curJntPos[i], m_masterDynaData.m_massMat[i]);
	// remove gravity and friction from external torque
	vecSelfAdd(m_masterDynaData.m_jntExtTrq[i], m_masterDynaData.m_gravity[i]);
	vecSelfAdd(m_masterDynaData.m_jntExtTrq[i], m_masterDynaData.m_friction[i]);*)
	
END_FOR

m_codeTime(START:=FALSE);
]]></ST>
    </Implementation>
    <LineIds Name="RobotDynamics">
      <LineId Id="81" Count="0" />
      <LineId Id="161" Count="0" />
      <LineId Id="15" Count="1" />
      <LineId Id="24" Count="1" />
      <LineId Id="52" Count="0" />
      <LineId Id="190" Count="0" />
      <LineId Id="214" Count="0" />
      <LineId Id="213" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="17" Count="1" />
      <LineId Id="5" Count="0" />
      <LineId Id="28" Count="1" />
      <LineId Id="199" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="194" Count="0" />
      <LineId Id="200" Count="0" />
      <LineId Id="196" Count="2" />
      <LineId Id="195" Count="0" />
      <LineId Id="201" Count="4" />
      <LineId Id="215" Count="0" />
      <LineId Id="248" Count="2" />
      <LineId Id="207" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="193" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="110" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>